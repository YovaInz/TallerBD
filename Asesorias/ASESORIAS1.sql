
 -----------------------------
--	 CREACION DE UNA BASE DE DATOS --
----------------------------------

CREATE DATABASE REGISTROARTICULOS -- INSTRUCCION PRINCIPAL
GO
USE REGISTROARTICULOS -- UBICARNOS DENTRO DE LA MISMA PARA PODER CREAR LAS TABLAS
GO 
CREATE TABLE ARTICULOS -- CREACION DE UNA TABLA --
( 
ARTID INT NOT NULL, -- (NOMBRE COLUMNA, TIPO DE DATO, SI PERMITE NULO O NO)
ARTNOMBRE NVARCHAR(50) NOT NULL,
ARTPRECIO NUMERIC(10,2) NOT NULL, 
ARTPAQUETE INT NOT NULL,
COLOR NVARCHAR(15) NULL)
GO					-- INSTRUCCION GO TE PERMITE PASAR A LA SIGUIENTE INSTRUCCION
CREATE TABLE TIPOS(
TIPOID INT NOT NULL,
TIPONOMBRE NVARCHAR(50) NOT NULL)
GO
CREATE TABLE BODEGAS(
BODID INT NOT NULL,
BODNOMBRE NVARCHAR(50) NOT NULL,
BODDIMICILIO NVARCHAR(100) NOT NULL,
TIPOID INT NOT NULL)
GO
CREATE TABLE ENVIOS(
BODID INT NOT NULL,
FOLIO INT NOT NULL,
FECHA DATETIME NOT NULL,
ARTID INT NOT NULL,
CANTIDAD NUMERIC(8,2) NOT NULL,
PRECIO NUMERIC(10,2) NOT NULL)
GO

-- PRUEBA INSERT CON ERROR EN PRECIO:
INSERT ARTICULOS VALUES (1, 'Iphone', 0.00, 1, 'Rojo')
INSERT ARTICULOS VALUES (1, 'Iphone', 0.01, 1, 'Rojo') -- CORREGIMOS EL PRECIO

-- PRUEBA INSERT USANDO EL DEFAULT:
INSERT ARTICULOS VALUES (2, 'Laptop', 5499, 2, default)

-- PRUEBA INSERT CON ERROR VALORES UNICOS REPETIDOS:
INSERT ARTICULOS VALUES (3, 'Teclado', 499, 2, default)
INSERT ARTICULOS VALUES (3, 'Teclado', 499, 3, default) -- CORREGIMOS EL PAQUETE

-- CONSULTAMOS LOS DATOS AGREGADOS:
SELECT * FROM ARTICULOS

-- BORRAMOS LOS DATOS AGREGADOS:
DELETE ARTICULOS


-- PRIMARY KEY
ALTER TABLE BODEGAS ADD CONSTRAINT PK_BODEGAS PRIMARY KEY(BODID)
GO
ALTER TABLE ARTICULOS -- INSTRUCCION PARA MODIFICAR UNA TABLA
ADD CONSTRAINT PK_ARTICULOS PRIMARY KEY (ARTID) -- LLAVE PRIMARIA
GO
ALTER TABLE TIPOS ADD CONSTRAINT PK_TIPOS PRIMARY KEY (TIPOID)
GO
ALTER TABLE BODEGAS ADD CONSTRAINT PK_BODEGAS PRIMARY KEY (BODID)
GO
ALTER TABLE ENVIOS ADD CONSTRAINT PK_ENVIOS PRIMARY KEY (BODID, FOLIO)
GO

-- FK (FOREIGN KEY)
ALTER TABLE BODEGAS ADD CONSTRAINT FK_BOD_TIPOS FOREIGN KEY (TIPOID) REFERENCES TIPOS(TIPOID)
GO
ALTER TABLE ENVIOS ADD 
CONSTRAINT FK_ENV_BOD FOREIGN KEY (BODID) REFERENCES BODEGAS(BODID),
CONSTRAINT FK_ENV_ART FOREIGN KEY (ARTID) REFERENCES ARTICULOS(ARTID)  -- LLAVE FORANEA
GO

ALTER TABLE ARTICULOS ADD
CONSTRAINT FK_ART_BOD FOREIGN KEY (BODID) REFERENCES BODEGAS(BODID)
ALTER TABLE ARTICULOS ADD
CONSTRAINT FK_ART_ARTPADRE FOREIGN KEY (ARTPADRE) REFERENCES ARTICULOS (ARTID),
CONSTRAINT FK_ART_BODPADRE FOREIGN KEY (BODPADRE) REFERENCES ARTICULOS (BODID)
GO

-- PUNTOS EXTRA 
ALTER TABLE ARTICULOS ADD 
CONSTRAINT DC_ART_COLOR DEFAULT('No Especificado') FOR COLOR, -- DEFAULT CONSTRAINT
CONSTRAINT CC_ART_PRECIO CHECK (ARTPRECIO >= 0.01), -- CHECK CONSTRAINT 
CONSTRAINT UC_ART_ARTPAQUETE UNIQUE(ARTPAQUETE) -- UNIQUE CONSTRAINT
GO
-- CAMPOS UNICOS
ALTER TABLE BODEGAS ADD CONSTRAINT UC_BODEGAS_TIPOID UNIQUE(TIPOID)
GO


  ---------------------------
--	    CONSULTAS  (A PARTIR DE LA BD FERRETERIAS)  --
---------------------------

-- INGRESAMOS A LA BASE DE DATOS DONDE ESTAREMOS CONSULTANDO DATOS:
USE FERRETERIAS

-- Consulta con el nombre del empleado, nombre de la zona, mostrar solo
-- los registro donde el nombre de la zona empiece y termine con la misma letra. 
SELECT EMPLEADO = E.EMPNOMBRE + ' ' + E.EMPAPEPAT + ' ' + E.EMPAPEMAT, ZONA = Z.ZONANOMBRE
FROM EMPLEADOS E
INNER JOIN ZONAS Z ON Z.ZONAID = E.ZONAID
WHERE RIGHT(Z.ZONANOMBRE, 1) LIKE LEFT(Z.ZONANOMBRE, 1)


-- Consulta con el nombre del municipio y nombre de la colonia, mostrar las colonias que
-- tenga dos vocales seguidas.
SELECT M.MUNINOMBRE, COL.COLNOMBRE
FROM MUNICIPIOS M
INNER JOIN COLONIAS COL ON COL.MUNIID = M.MUNIID
WHERE COL.COLNOMBRE LIKE '%[AEIOU][AEIOU]%'


-- Consulta con el nombre del empleado, nombre de su jefe. Mostrar solo
-- los empleados y jefes que vivan en la misma zona.
SELECT  EMPLEADO = E.EMPNOMBRE, JEFE = J.EMPNOMBRE
FROM EMPLEADOS E
INNER JOIN EMPLEADOS J ON J.EMPID = E.JEFEID
WHERE E.ZONAID = J.ZONAID


-- Consulta con el folio de la venta, nombre del articulo, cantidad de piezas
-- vendidas, precio e importe total. Mostrar solo los articulos de las familias que su nombre
-- empieza con las letras Q,R,T,G.
SELECT V.FOLIO, A.ARTNOMBRE, DE.CANTIDAD, DE.PRECIO, IMPORTE = (DE.CANTIDAD*DE.PRECIO)
FROM VENTAS V
INNER JOIN DETALLE DE ON DE.FOLIO = V.FOLIO
INNER JOIN ARTICULOS A ON A.ARTID = DE.ARTID
INNER JOIN FAMILIAS F ON F.FAMID = A.FAMID
WHERE F.FAMNOMBRE LIKE '[QRTG]%'


-- Consulta con el nombre completo del cliente, nombre de la colonia y nombre del
-- municipio. mostrar solo los clientes que el nombre del municipio y nombre de la colonia
-- contenga la cadena 'asa'.
SELECT CLIENTE = CTE.CTENOMBRE + ' ' + CTE.CTEAPEPAT + ' ' + CTE.CTEAPEMAT,
COL.COLNOMBRE, M.MUNINOMBRE
FROM CLIENTES CTE
INNER JOIN COLONIAS COL ON COL.COLID = CTE.COLID
INNER JOIN MUNICIPIOS M ON M.MUNIID = COL.MUNIID
WHERE M.MUNINOMBRE LIKE '%ASA%' AND COL.COLNOMBRE LIKE '%ASA%'


-- Consulta con el folio de la venta, fecha, nombre del empleado y cliente. mostrar
-- solo los empleados que no tengan rfc y los clientes que no tengan curp
SELECT V.FOLIO, V.FECHA, [EMPLEADO] = E.EMPNOMBRE, 
[CLIENTE] = CTE.CTENOMBRE
FROM VENTAS V
INNER JOIN EMPLEADOS E ON E.EMPID = V.EMPID
INNER JOIN CLIENTES CTE ON CTE.CTEID = V.CTEID
WHERE E.EMPRFC IS NULL AND CTE.CTECURP IS NULL


-- Consulta con el nombre del articulo y nombre de la familia. mostrar solo 
-- las familias que su tercera letra sea t, s, b, m.
SELECT A.ARTNOMBRE, F.FAMNOMBRE
FROM ARTICULOS A
INNER JOIN FAMILIAS F ON F.FAMID = A.FAMID
WHERE F.FAMNOMBRE LIKE '__[TSBM]%'


-- Consulta con el nombre del empleado, nombre de su jefe. Mostrar solo los
-- empleados y jefes que vivan en la misma zona. 
SELECT [EMPLEADO] = E.EMPNOMBRE + ' ' + E.EMPAPEPAT + ' ' + E.EMPAPEMAT,
[JEFE] = J.EMPNOMBRE + ' ' + J.EMPAPEPAT
FROM EMPLEADOS E 
INNER JOIN EMPLEADOS J ON J.EMPID = E.EMPID



